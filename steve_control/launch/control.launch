<?xml version='1.0'?>
<launch>

  <arg name="simulation" default="false"/>
  <arg name="simple" default="true"/>

  <include file="$(find zeus_description)/launch/description_simple.launch" if="$(arg simple)"/>
  <include file="$(find zeus_description)/launch/description.launch" unless="$(arg simple)"/>

  <!-- Sensors -->
  <group unless="$(arg simulation)">
    
    <!-- test cam zed -->
    <include file="$(find steve_cam)/launch/zed.launch" />

    <!-- IMU -->
    <include file="$(find steve_control)/launch/mpu9250.launch" />

    <!-- Launch gps -->
    <!-- Do not forget to give access to the port : sudo chmod 666 /dev/ttyTHS1 -->
    <include file="$(find steve_control)/launch/gps.launch">
      
    </include>
  </group>

  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" /> 

  <!-- Base controller -->
  <!-- base_controller.launch is only included if in sim, because on the real rover it will be launched at boot time -->
  <include file="$(find steve_control)/launch/base_controller.launch">
    <arg name="simulation" value="$(arg simulation)"/>
    <arg name="bypass_safety" value="false"/>
  </include>

  <!-- Safety_break -->
  <node name="safety_brake" type="safety_brake" pkg="steve_safety_brake" output="screen">
        <remap from="cmd_vel_in" to="cmd_vel_watchdog"/>
        <remap from="laserscan" to="obstacle_detector/scan"/>
        <remap from="status" to="safety_break/status"/>
        <remap from="cmd_vel_safety_brake" to="cmd_vel_out"/>
        <param name="safety_width" value="1.2" />
        <param name="safety_length" value="3" />
  </node>

  <!-- Watchdog -->
  <node name="steve_watchdog" pkg="steve_watchdog" type="steve_watchdog">
    <rosparam file="$(find steve_control)/config/watchdog_topics.yaml" command="load" />
    <remap from="info" to="watchdog/info" />
    <remap from="status" to="watchdog/status" />
    <remap from="cmd_vel_in" to="cmd_vel_mux" />
    <remap from="cmd_vel_out" to="cmd_vel_watchdog" />
  </node>
    
  <!-- Odometry sources -->
  <node name="rgbd_odometry" pkg="rtabmap_ros" type="rgbd_odometry" >
    <remap from="rgb/image" to="/zed_node/rgb/image_rect_color" />
    <remap from="rgb/camera_info" to="/zed_node/rgb/camera_info" />
    <remap from="depth/image" to="/zed_node/depth/depth_registered" />
    <remap from="odom" to="rgbd_odom" />
    <rosparam command="load" file="$(find steve_control)/config/rgbd_odometry.yaml"/>
  </node>

  <!-- EKF Localization -->
  <node name="local_ekf" pkg="robot_localization" type="ekf_localization_node" >
    <rosparam command="load" file="$(find steve_control)/config/local_ekf.yaml"/>
    <remap from="/odometry/filtered" to="/local_ekf/odom" />
  </node>

  <node name="global_ekf" pkg="robot_localization" type="ekf_localization_node" >
    <rosparam command="load" file="$(find steve_control)/config/global_ekf.yaml"/>
    <remap from="/odometry/filtered" to="/global_ekf/odom" />
  </node>

  <node pkg="robot_localization" type="navsat_transform_node" name="navsat_transform_node" respawn="true">
    <param name="zero_altitude" value="true" />
    <param name="magnetic_declination_radians" value="0"/>
    <param name="yaw_offset" value="0"/>  <!-- Change depending on location and date -->
    <remap from="/gps/fix" to="/fix" />
    <remap from="/odometry/filtered" to="/global_ekf/odom" />
  </node>

  <!-- Initialize GPS origin -->
  <node pkg="swri_transform_util" type="initialize_origin.py" name="initialize_origin" >
    <param name="local_xy_frame" value="/map"/>
    <param name="local_xy_origin" value="UdeS"/>  <!-- Change this to the name of the wanted location in the list-->
    <rosparam param="local_xy_origins">
      [{ name: MDRS,
          latitude: 38.406333,
          longitude: -110.791962,
          altitude: 1372.0,
          heading: 0.0},
          
        { name: UdeS,
          latitude: 45.378395,
          longitude: -71.926644,
          altitude: 263.0,
          heading: 0.0}]
    </rosparam>
</node> 

</launch>
